version: "3.7"
services:
  product_svc:
    container_name: product_svc
    image: khacquyen1996/product-svc:v1.0.0
    ports:
      - 8080:8080
      - 7070:7070
    restart: always
    networks:
      - microservice_network
    environment:
      - build_env=docker
    depends_on:
      - prometheus
      - node_exporter
      - grafana
      - rabbitmq
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.9.7-management
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservice_network
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.26
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    networks:
      - microservice_network
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.30.3
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:Z
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention=20d"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
    networks:
      - microservice_network
  node_exporter:
    container_name: node_exporter
    image: prom/node-exporter:v1.2.2
    ports:
      - 9101:9100
    networks:
      - microservice_network
  grafana:
    container_name: grafana
    image: grafana/grafana:8.1.7
    ports:
      - 3000:3000
    networks:
      - microservice_network
volumes:
  rabbitmq_data:
networks:
  microservice_network:
